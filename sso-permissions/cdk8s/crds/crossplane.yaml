---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: groupmemberships.identitystore.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: groupmemberships.identitystore.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-identitystore-e2f757e17081
    uid: b7dbd36f-5bed-456e-8053-f0bde3128f61
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-identitystore
    uid: 703bb5da-b3d6-43bc-a8aa-7678149b6f56
  resourceVersion: "13168516"
  uid: a0612542-23af-4876-a8ea-9ae27408a6ff
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDVENDQXZHZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16TmFGdzB6Ck5EQTVNalV4TXpNeE16TmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdmYwUHlLWjhDCms5NWNRSVhrd25MaG9GdnEySVB3MVJTaXlqTmd5MzhSelpDV2V3Q0dnN05aZFBocTV2UDJiWjJaekxmRFFkUkoKK3RhMVY0cytzR0Z1WmxhZmEyZVIzbnN4d0FmeWZQRWhLMUtZcys3VXVCNFc4NUVpdkZGZnJmN3JrSlg3QU5wOAp2M0hJYTJ0c1hNVE8xM2kwMEpFZ2pnSmtNRW5CRmpqMk5pcWJ3VkJ1ay90eFJacnZya3RYQUxNY2RyR1ZnQXpWClc0OFRJT3ZIMVJiNnpQS3l0MEl0ZXFxalIwMENHTFhBcFhFaU5qYkZIQkpmaGw2dkgvdTVnQWN6alNIMjZjVkQKRUhkWG5mb01jVkFvd0kxU2Q2ZmU5Ymw5N2tXMUo5UE5qUVNoaXF3UGgyRHQ4ZTlnUVlseVVHRG8ya3hCSVhjOApsNmFtc3g1Rk1KNDFBZ01CQUFHamdkZ3dnZFV3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1o4R0ExVWRFUVNCbHpDQmxJSWlkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGFXUmxiblJwZEhsemRHOXlaWUkwZFhCaWIzVnVaQzF3Y205MmFXUmxjaTFoZDNNdAphV1JsYm5ScGRIbHpkRzl5WlM1amNtOXpjM0JzWVc1bExYTjVjM1JsYllJNGRYQmliM1Z1WkMxd2NtOTJhV1JsCmNpMWhkM010YVdSbGJuUnBkSGx6ZEc5eVpTNWpjbTl6YzNCc1lXNWxMWE41YzNSbGJTNXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFFWHI5cDFMNHFDMFVYWDlzTk5TckdyQlN1NVdvQWU2WFVic0swRjlRS0ZYQWZHVQpZYVNFNzQ3anAyS3FOWWdzMFRJdG1rWWN5ZjJ3Z0o1UEtRbWtPdTJrajJDeTJvSVppMS9MODN4c1RQdGdOWXVsCmJtNGozdStPNnFUVUx4ZUY5QndJSzQ4ZE1XK1dnTThGczZqVWJzcUYrK2ZjdWxBQjUzZE5PRVZaTzdicmF3Q08KdWdYQVZGbjJUTGNVVnVPUFNEV2dyZU9SdWdFN1hVb2dDTzhjSkhnYlByMVF2UUVSNGJ6bk04bEt2eWUvQ0xUMgpPTjllV2ZYazl5enNKVSt5MzdJSkZmUW93NEFBcWU5bkNqcFd5N3lKckpxNWJ6M2dCd05INVQya3BYQ2lSeVNtCmprWXUrVmM4MWxTcXRQVnBCUjU5b29sdXlDWUhNek1vYXZJdkZlaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        service:
          name: upbound-provider-aws-identitystore
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: identitystore.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: GroupMembership
    listKind: GroupMembershipList
    plural: groupmemberships
    singular: groupmembership
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: GroupMembership is the Schema for the GroupMemberships API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GroupMembershipSpec defines the desired state of GroupMembership
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  groupId:
                    description: The identifier for a group in the Identity Store.
                    type: string
                  groupIdRef:
                    description: Reference to a Group in identitystore to populate
                      groupId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  groupIdSelector:
                    description: Selector for a Group in identitystore to populate
                      groupId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  identityStoreId:
                    description: Identity Store ID associated with the Single Sign-On
                      Instance.
                    type: string
                  memberId:
                    description: The identifier for a user in the Identity Store.
                    type: string
                  memberIdRef:
                    description: Reference to a User in identitystore to populate
                      memberId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  memberIdSelector:
                    description: Selector for a User in identitystore to populate
                      memberId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - identityStoreId
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  groupId:
                    description: The identifier for a group in the Identity Store.
                    type: string
                  groupIdRef:
                    description: Reference to a Group in identitystore to populate
                      groupId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  groupIdSelector:
                    description: Selector for a Group in identitystore to populate
                      groupId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  memberId:
                    description: The identifier for a user in the Identity Store.
                    type: string
                  memberIdRef:
                    description: Reference to a User in identitystore to populate
                      memberId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  memberIdSelector:
                    description: Selector for a User in identitystore to populate
                      memberId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: GroupMembershipStatus defines the observed state of GroupMembership.
            properties:
              atProvider:
                properties:
                  groupId:
                    description: The identifier for a group in the Identity Store.
                    type: string
                  id:
                    type: string
                  identityStoreId:
                    description: Identity Store ID associated with the Single Sign-On
                      Instance.
                    type: string
                  memberId:
                    description: The identifier for a user in the Identity Store.
                    type: string
                  membershipId:
                    description: The identifier of the newly created group membership
                      in the Identity Store.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: GroupMembership
    listKind: GroupMembershipList
    plural: groupmemberships
    singular: groupmembership
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: groups.identitystore.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: groups.identitystore.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-identitystore-e2f757e17081
    uid: b7dbd36f-5bed-456e-8053-f0bde3128f61
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-identitystore
    uid: 703bb5da-b3d6-43bc-a8aa-7678149b6f56
  resourceVersion: "13168513"
  uid: 9c51a5c3-91f4-4315-8e83-2fd112d1018c
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDVENDQXZHZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16TmFGdzB6Ck5EQTVNalV4TXpNeE16TmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdmYwUHlLWjhDCms5NWNRSVhrd25MaG9GdnEySVB3MVJTaXlqTmd5MzhSelpDV2V3Q0dnN05aZFBocTV2UDJiWjJaekxmRFFkUkoKK3RhMVY0cytzR0Z1WmxhZmEyZVIzbnN4d0FmeWZQRWhLMUtZcys3VXVCNFc4NUVpdkZGZnJmN3JrSlg3QU5wOAp2M0hJYTJ0c1hNVE8xM2kwMEpFZ2pnSmtNRW5CRmpqMk5pcWJ3VkJ1ay90eFJacnZya3RYQUxNY2RyR1ZnQXpWClc0OFRJT3ZIMVJiNnpQS3l0MEl0ZXFxalIwMENHTFhBcFhFaU5qYkZIQkpmaGw2dkgvdTVnQWN6alNIMjZjVkQKRUhkWG5mb01jVkFvd0kxU2Q2ZmU5Ymw5N2tXMUo5UE5qUVNoaXF3UGgyRHQ4ZTlnUVlseVVHRG8ya3hCSVhjOApsNmFtc3g1Rk1KNDFBZ01CQUFHamdkZ3dnZFV3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1o4R0ExVWRFUVNCbHpDQmxJSWlkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGFXUmxiblJwZEhsemRHOXlaWUkwZFhCaWIzVnVaQzF3Y205MmFXUmxjaTFoZDNNdAphV1JsYm5ScGRIbHpkRzl5WlM1amNtOXpjM0JzWVc1bExYTjVjM1JsYllJNGRYQmliM1Z1WkMxd2NtOTJhV1JsCmNpMWhkM010YVdSbGJuUnBkSGx6ZEc5eVpTNWpjbTl6YzNCc1lXNWxMWE41YzNSbGJTNXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFFWHI5cDFMNHFDMFVYWDlzTk5TckdyQlN1NVdvQWU2WFVic0swRjlRS0ZYQWZHVQpZYVNFNzQ3anAyS3FOWWdzMFRJdG1rWWN5ZjJ3Z0o1UEtRbWtPdTJrajJDeTJvSVppMS9MODN4c1RQdGdOWXVsCmJtNGozdStPNnFUVUx4ZUY5QndJSzQ4ZE1XK1dnTThGczZqVWJzcUYrK2ZjdWxBQjUzZE5PRVZaTzdicmF3Q08KdWdYQVZGbjJUTGNVVnVPUFNEV2dyZU9SdWdFN1hVb2dDTzhjSkhnYlByMVF2UUVSNGJ6bk04bEt2eWUvQ0xUMgpPTjllV2ZYazl5enNKVSt5MzdJSkZmUW93NEFBcWU5bkNqcFd5N3lKckpxNWJ6M2dCd05INVQya3BYQ2lSeVNtCmprWXUrVmM4MWxTcXRQVnBCUjU5b29sdXlDWUhNek1vYXZJdkZlaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        service:
          name: upbound-provider-aws-identitystore
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: identitystore.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Group is the Schema for the Groups API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GroupSpec defines the desired state of Group
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A string containing the description of the group.
                    type: string
                  displayName:
                    description: A string containing the name of the group. This value
                      is commonly displayed when the group is referenced.
                    type: string
                  identityStoreId:
                    description: The globally unique identifier for the identity store.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - displayName
                - identityStoreId
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  description:
                    description: A string containing the description of the group.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: GroupStatus defines the observed state of Group.
            properties:
              atProvider:
                properties:
                  description:
                    description: A string containing the description of the group.
                    type: string
                  displayName:
                    description: A string containing the name of the group. This value
                      is commonly displayed when the group is referenced.
                    type: string
                  externalIds:
                    description: A list of external IDs that contains the identifiers
                      issued to this resource by an external identity provider. See
                      External IDs below.
                    items:
                      properties:
                        id:
                          description: The identifier issued to this resource by an
                            external identity provider.
                          type: string
                        issuer:
                          description: The issuer for an external identifier.
                          type: string
                      type: object
                    type: array
                  groupId:
                    description: The identifier of the newly created group in the
                      identity store.
                    type: string
                  id:
                    description: The identifier issued to this resource by an external
                      identity provider.
                    type: string
                  identityStoreId:
                    description: The globally unique identifier for the identity store.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: users.identitystore.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: users.identitystore.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-identitystore-e2f757e17081
    uid: b7dbd36f-5bed-456e-8053-f0bde3128f61
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-identitystore
    uid: 703bb5da-b3d6-43bc-a8aa-7678149b6f56
  resourceVersion: "13168518"
  uid: ea91e4d3-31c5-4b1b-a53a-2491a4b7eb7b
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDVENDQXZHZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16TmFGdzB6Ck5EQTVNalV4TXpNeE16TmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdmYwUHlLWjhDCms5NWNRSVhrd25MaG9GdnEySVB3MVJTaXlqTmd5MzhSelpDV2V3Q0dnN05aZFBocTV2UDJiWjJaekxmRFFkUkoKK3RhMVY0cytzR0Z1WmxhZmEyZVIzbnN4d0FmeWZQRWhLMUtZcys3VXVCNFc4NUVpdkZGZnJmN3JrSlg3QU5wOAp2M0hJYTJ0c1hNVE8xM2kwMEpFZ2pnSmtNRW5CRmpqMk5pcWJ3VkJ1ay90eFJacnZya3RYQUxNY2RyR1ZnQXpWClc0OFRJT3ZIMVJiNnpQS3l0MEl0ZXFxalIwMENHTFhBcFhFaU5qYkZIQkpmaGw2dkgvdTVnQWN6alNIMjZjVkQKRUhkWG5mb01jVkFvd0kxU2Q2ZmU5Ymw5N2tXMUo5UE5qUVNoaXF3UGgyRHQ4ZTlnUVlseVVHRG8ya3hCSVhjOApsNmFtc3g1Rk1KNDFBZ01CQUFHamdkZ3dnZFV3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1o4R0ExVWRFUVNCbHpDQmxJSWlkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGFXUmxiblJwZEhsemRHOXlaWUkwZFhCaWIzVnVaQzF3Y205MmFXUmxjaTFoZDNNdAphV1JsYm5ScGRIbHpkRzl5WlM1amNtOXpjM0JzWVc1bExYTjVjM1JsYllJNGRYQmliM1Z1WkMxd2NtOTJhV1JsCmNpMWhkM010YVdSbGJuUnBkSGx6ZEc5eVpTNWpjbTl6YzNCc1lXNWxMWE41YzNSbGJTNXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFFWHI5cDFMNHFDMFVYWDlzTk5TckdyQlN1NVdvQWU2WFVic0swRjlRS0ZYQWZHVQpZYVNFNzQ3anAyS3FOWWdzMFRJdG1rWWN5ZjJ3Z0o1UEtRbWtPdTJrajJDeTJvSVppMS9MODN4c1RQdGdOWXVsCmJtNGozdStPNnFUVUx4ZUY5QndJSzQ4ZE1XK1dnTThGczZqVWJzcUYrK2ZjdWxBQjUzZE5PRVZaTzdicmF3Q08KdWdYQVZGbjJUTGNVVnVPUFNEV2dyZU9SdWdFN1hVb2dDTzhjSkhnYlByMVF2UUVSNGJ6bk04bEt2eWUvQ0xUMgpPTjllV2ZYazl5enNKVSt5MzdJSkZmUW93NEFBcWU5bkNqcFd5N3lKckpxNWJ6M2dCd05INVQya3BYQ2lSeVNtCmprWXUrVmM4MWxTcXRQVnBCUjU5b29sdXlDWUhNek1vYXZJdkZlaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        service:
          name: upbound-provider-aws-identitystore
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: identitystore.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    items:
                      properties:
                        country:
                          description: The country that this address is in.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            address is shown for display.
                          type: string
                        locality:
                          description: The address locality.
                          type: string
                        postalCode:
                          description: The postal code of the address.
                          type: string
                        primary:
                          description: When true, this is the primary address associated
                            with the user.
                          type: boolean
                        region:
                          description: The region of the address.
                          type: string
                        streetAddress:
                          description: The street of the address.
                          type: string
                        type:
                          description: The type of address.
                          type: string
                      type: object
                    type: array
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary email associated
                            with the user.
                          type: boolean
                        type:
                          description: The type of email.
                          type: string
                        value:
                          description: The email address. This value must be unique
                            across the identity store.
                          type: string
                      type: object
                    type: array
                  identityStoreId:
                    description: The globally unique identifier for the identity store
                      that this user is in.
                    type: string
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    items:
                      properties:
                        familyName:
                          description: The family name of the user.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            name is shown for display.
                          type: string
                        givenName:
                          description: The given name of the user.
                          type: string
                        honorificPrefix:
                          description: The honorific prefix of the user.
                          type: string
                        honorificSuffix:
                          description: The honorific suffix of the user.
                          type: string
                        middleName:
                          description: The middle name of the user.
                          type: string
                      type: object
                    type: array
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary phone number
                            associated with the user.
                          type: boolean
                        type:
                          description: The type of phone number.
                          type: string
                        value:
                          description: The user's phone number.
                          type: string
                      type: object
                    type: array
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  region:
                    description: |-
                      The region of the address.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                required:
                - identityStoreId
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    items:
                      properties:
                        country:
                          description: The country that this address is in.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            address is shown for display.
                          type: string
                        locality:
                          description: The address locality.
                          type: string
                        postalCode:
                          description: The postal code of the address.
                          type: string
                        primary:
                          description: When true, this is the primary address associated
                            with the user.
                          type: boolean
                        streetAddress:
                          description: The street of the address.
                          type: string
                        type:
                          description: The type of address.
                          type: string
                      type: object
                    type: array
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary email associated
                            with the user.
                          type: boolean
                        type:
                          description: The type of email.
                          type: string
                        value:
                          description: The email address. This value must be unique
                            across the identity store.
                          type: string
                      type: object
                    type: array
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    items:
                      properties:
                        familyName:
                          description: The family name of the user.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            name is shown for display.
                          type: string
                        givenName:
                          description: The given name of the user.
                          type: string
                        honorificPrefix:
                          description: The honorific prefix of the user.
                          type: string
                        honorificSuffix:
                          description: The honorific suffix of the user.
                          type: string
                        middleName:
                          description: The middle name of the user.
                          type: string
                      type: object
                    type: array
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary phone number
                            associated with the user.
                          type: boolean
                        type:
                          description: The type of phone number.
                          type: string
                        value:
                          description: The user's phone number.
                          type: string
                      type: object
                    type: array
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.displayName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.displayName)
                || (has(self.initProvider) && has(self.initProvider.displayName))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.userName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.userName)
                || (has(self.initProvider) && has(self.initProvider.userName))'
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    items:
                      properties:
                        country:
                          description: The country that this address is in.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            address is shown for display.
                          type: string
                        locality:
                          description: The address locality.
                          type: string
                        postalCode:
                          description: The postal code of the address.
                          type: string
                        primary:
                          description: When true, this is the primary address associated
                            with the user.
                          type: boolean
                        region:
                          description: The region of the address.
                          type: string
                        streetAddress:
                          description: The street of the address.
                          type: string
                        type:
                          description: The type of address.
                          type: string
                      type: object
                    type: array
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary email associated
                            with the user.
                          type: boolean
                        type:
                          description: The type of email.
                          type: string
                        value:
                          description: The email address. This value must be unique
                            across the identity store.
                          type: string
                      type: object
                    type: array
                  externalIds:
                    description: A list of identifiers issued to this resource by
                      an external identity provider.
                    items:
                      properties:
                        id:
                          description: The identifier issued to this resource by an
                            external identity provider.
                          type: string
                        issuer:
                          description: The issuer for an external identifier.
                          type: string
                      type: object
                    type: array
                  id:
                    description: The identifier issued to this resource by an external
                      identity provider.
                    type: string
                  identityStoreId:
                    description: The globally unique identifier for the identity store
                      that this user is in.
                    type: string
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    items:
                      properties:
                        familyName:
                          description: The family name of the user.
                          type: string
                        formatted:
                          description: The name that is typically displayed when the
                            name is shown for display.
                          type: string
                        givenName:
                          description: The given name of the user.
                          type: string
                        honorificPrefix:
                          description: The honorific prefix of the user.
                          type: string
                        honorificSuffix:
                          description: The honorific suffix of the user.
                          type: string
                        middleName:
                          description: The middle name of the user.
                          type: string
                      type: object
                    type: array
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    items:
                      properties:
                        primary:
                          description: When true, this is the primary phone number
                            associated with the user.
                          type: boolean
                        type:
                          description: The type of phone number.
                          type: string
                        value:
                          description: The user's phone number.
                          type: string
                      type: object
                    type: array
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userId:
                    description: The identifier for this user in the identity store.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    properties:
                      country:
                        description: The country that this address is in.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          address is shown for display.
                        type: string
                      locality:
                        description: The address locality.
                        type: string
                      postalCode:
                        description: The postal code of the address.
                        type: string
                      primary:
                        description: When true, this is the primary address associated
                          with the user.
                        type: boolean
                      region:
                        description: The region of the address.
                        type: string
                      streetAddress:
                        description: The street of the address.
                        type: string
                      type:
                        description: The type of address.
                        type: string
                    type: object
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary email associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of email.
                        type: string
                      value:
                        description: The email address. This value must be unique
                          across the identity store.
                        type: string
                    type: object
                  identityStoreId:
                    description: The globally unique identifier for the identity store
                      that this user is in.
                    type: string
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    properties:
                      familyName:
                        description: The family name of the user.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          name is shown for display.
                        type: string
                      givenName:
                        description: The given name of the user.
                        type: string
                      honorificPrefix:
                        description: The honorific prefix of the user.
                        type: string
                      honorificSuffix:
                        description: The honorific suffix of the user.
                        type: string
                      middleName:
                        description: The middle name of the user.
                        type: string
                    type: object
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary phone number associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of phone number.
                        type: string
                      value:
                        description: The user's phone number.
                        type: string
                    type: object
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  region:
                    description: |-
                      The region of the address.
                      Region is the region you'd like your resource to be created in.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                required:
                - identityStoreId
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    properties:
                      country:
                        description: The country that this address is in.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          address is shown for display.
                        type: string
                      locality:
                        description: The address locality.
                        type: string
                      postalCode:
                        description: The postal code of the address.
                        type: string
                      primary:
                        description: When true, this is the primary address associated
                          with the user.
                        type: boolean
                      streetAddress:
                        description: The street of the address.
                        type: string
                      type:
                        description: The type of address.
                        type: string
                    type: object
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary email associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of email.
                        type: string
                      value:
                        description: The email address. This value must be unique
                          across the identity store.
                        type: string
                    type: object
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    properties:
                      familyName:
                        description: The family name of the user.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          name is shown for display.
                        type: string
                      givenName:
                        description: The given name of the user.
                        type: string
                      honorificPrefix:
                        description: The honorific prefix of the user.
                        type: string
                      honorificSuffix:
                        description: The honorific suffix of the user.
                        type: string
                      middleName:
                        description: The middle name of the user.
                        type: string
                    type: object
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary phone number associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of phone number.
                        type: string
                      value:
                        description: The user's phone number.
                        type: string
                    type: object
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.displayName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.displayName)
                || (has(self.initProvider) && has(self.initProvider.displayName))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.userName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.userName)
                || (has(self.initProvider) && has(self.initProvider.userName))'
          status:
            description: UserStatus defines the observed state of User.
            properties:
              atProvider:
                properties:
                  addresses:
                    description: Details about the user's address. At most 1 address
                      is allowed. Detailed below.
                    properties:
                      country:
                        description: The country that this address is in.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          address is shown for display.
                        type: string
                      locality:
                        description: The address locality.
                        type: string
                      postalCode:
                        description: The postal code of the address.
                        type: string
                      primary:
                        description: When true, this is the primary address associated
                          with the user.
                        type: boolean
                      region:
                        description: The region of the address.
                        type: string
                      streetAddress:
                        description: The street of the address.
                        type: string
                      type:
                        description: The type of address.
                        type: string
                    type: object
                  displayName:
                    description: The name that is typically displayed when the user
                      is referenced.
                    type: string
                  emails:
                    description: Details about the user's email. At most 1 email is
                      allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary email associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of email.
                        type: string
                      value:
                        description: The email address. This value must be unique
                          across the identity store.
                        type: string
                    type: object
                  externalIds:
                    description: A list of identifiers issued to this resource by
                      an external identity provider.
                    items:
                      properties:
                        id:
                          description: The identifier issued to this resource by an
                            external identity provider.
                          type: string
                        issuer:
                          description: The issuer for an external identifier.
                          type: string
                      type: object
                    type: array
                  id:
                    description: The identifier issued to this resource by an external
                      identity provider.
                    type: string
                  identityStoreId:
                    description: The globally unique identifier for the identity store
                      that this user is in.
                    type: string
                  locale:
                    description: The user's geographical region or location.
                    type: string
                  name:
                    description: Details about the user's full name. Detailed below.
                    properties:
                      familyName:
                        description: The family name of the user.
                        type: string
                      formatted:
                        description: The name that is typically displayed when the
                          name is shown for display.
                        type: string
                      givenName:
                        description: The given name of the user.
                        type: string
                      honorificPrefix:
                        description: The honorific prefix of the user.
                        type: string
                      honorificSuffix:
                        description: The honorific suffix of the user.
                        type: string
                      middleName:
                        description: The middle name of the user.
                        type: string
                    type: object
                  nickname:
                    description: An alternate name for the user.
                    type: string
                  phoneNumbers:
                    description: Details about the user's phone number. At most 1
                      phone number is allowed. Detailed below.
                    properties:
                      primary:
                        description: When true, this is the primary phone number associated
                          with the user.
                        type: boolean
                      type:
                        description: The type of phone number.
                        type: string
                      value:
                        description: The user's phone number.
                        type: string
                    type: object
                  preferredLanguage:
                    description: The preferred language of the user.
                    type: string
                  profileUrl:
                    description: An URL that may be associated with the user.
                    type: string
                  timezone:
                    description: The user's time zone.
                    type: string
                  title:
                    description: The user's title.
                    type: string
                  userId:
                    description: The identifier for this user in the identity store.
                    type: string
                  userName:
                    description: A unique string used to identify the user. This value
                      can consist of letters, accented characters, symbols, numbers,
                      and punctuation. This value is specified at the time the user
                      is created and stored as an attribute of the user object in
                      the identity store. The limit is 128 characters.
                    type: string
                  userType:
                    description: The user type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: User
    listKind: UserList
    plural: users
    singular: user
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: accountassignments.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: accountassignments.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168553"
  uid: cd5b39c2-a22a-446f-9b5a-ad882c529800
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: AccountAssignment
    listKind: AccountAssignmentList
    plural: accountassignments
    singular: accountassignment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AccountAssignment is the Schema for the AccountAssignments API.
          Manages a Single Sign-On (SSO) Account Assignment
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AccountAssignmentSpec defines the desired state of AccountAssignment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set that the admin wants to grant the principal access to.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  principalId:
                    description: An identifier for an object in SSO, such as a user
                      or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).
                      This can be set to the crossplane external-name of either a
                      Group or User in the identitystore api group, but the Ref and
                      Selector fields will only work with a Group.
                    type: string
                  principalIdFromGroupRef:
                    description: Reference to a Group in identitystore to populate
                      principalId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  principalIdFromGroupSelector:
                    description: Selector for a Group in identitystore to populate
                      principalId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  principalType:
                    description: 'The entity type for which the assignment will be
                      created. Valid values: USER, GROUP.'
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  targetId:
                    description: An AWS account identifier, typically a 10-12 digit
                      string.
                    type: string
                  targetType:
                    description: 'The entity type for which the assignment will be
                      created. Valid values: AWS_ACCOUNT.'
                    type: string
                required:
                - instanceArn
                - principalType
                - region
                - targetId
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: AccountAssignmentStatus defines the observed state of AccountAssignment.
            properties:
              atProvider:
                properties:
                  id:
                    description: The identifier of the Account Assignment i.e., principal_id,
                      principal_type, target_id, target_type, permission_set_arn,
                      instance_arn separated by commas (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set that the admin wants to grant the principal access to.
                    type: string
                  principalId:
                    description: An identifier for an object in SSO, such as a user
                      or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6).
                      This can be set to the crossplane external-name of either a
                      Group or User in the identitystore api group, but the Ref and
                      Selector fields will only work with a Group.
                    type: string
                  principalType:
                    description: 'The entity type for which the assignment will be
                      created. Valid values: USER, GROUP.'
                    type: string
                  targetId:
                    description: An AWS account identifier, typically a 10-12 digit
                      string.
                    type: string
                  targetType:
                    description: 'The entity type for which the assignment will be
                      created. Valid values: AWS_ACCOUNT.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: AccountAssignment
    listKind: AccountAssignmentList
    plural: accountassignments
    singular: accountassignment
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: customermanagedpolicyattachments.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: customermanagedpolicyattachments.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168586"
  uid: 324fd6a3-25f7-4c6a-9e3c-203b9d5fa071
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: CustomerManagedPolicyAttachment
    listKind: CustomerManagedPolicyAttachmentList
    plural: customermanagedpolicyattachments
    singular: customermanagedpolicyattachment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: CustomerManagedPolicyAttachment is the Schema for the CustomerManagedPolicyAttachments
          API. Manages a customer managed policy for a Single Sign-On (SSO) Permission
          Set
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CustomerManagedPolicyAttachmentSpec defines the desired state
              of CustomerManagedPolicyAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    items:
                      properties:
                        name:
                          description: Name of the customer managed IAM Policy to
                            be attached.
                          type: string
                        path:
                          description: The path to the IAM policy to be attached.
                            The default is /. See IAM Identifiers for more information.
                          type: string
                        policyNameRef:
                          description: Reference to a Policy in iam to populate name.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        policyNameSelector:
                          description: Selector for a Policy in iam to populate name.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    items:
                      properties:
                        name:
                          description: Name of the customer managed IAM Policy to
                            be attached.
                          type: string
                        path:
                          description: The path to the IAM policy to be attached.
                            The default is /. See IAM Identifiers for more information.
                          type: string
                        policyNameRef:
                          description: Reference to a Policy in iam to populate name.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        policyNameSelector:
                          description: Selector for a Policy in iam to populate name.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.customerManagedPolicyReference is a required
                parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.customerManagedPolicyReference)
                || (has(self.initProvider) && has(self.initProvider.customerManagedPolicyReference))'
          status:
            description: CustomerManagedPolicyAttachmentStatus defines the observed
              state of CustomerManagedPolicyAttachment.
            properties:
              atProvider:
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    items:
                      properties:
                        name:
                          description: Name of the customer managed IAM Policy to
                            be attached.
                          type: string
                        path:
                          description: The path to the IAM policy to be attached.
                            The default is /. See IAM Identifiers for more information.
                          type: string
                      type: object
                    type: array
                  id:
                    description: Policy Name, Policy Path, Permission Set Amazon Resource
                      Name (ARN), and SSO Instance ARN, each separated by a comma
                      (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: CustomerManagedPolicyAttachment is the Schema for the CustomerManagedPolicyAttachments
          API. Manages a customer managed policy for a Single Sign-On (SSO) Permission
          Set
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CustomerManagedPolicyAttachmentSpec defines the desired state
              of CustomerManagedPolicyAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    properties:
                      name:
                        description: Name of the customer managed IAM Policy to be
                          attached.
                        type: string
                      path:
                        description: The path to the IAM policy to be attached. The
                          default is /. See IAM Identifiers for more information.
                        type: string
                      policyNameRef:
                        description: Reference to a Policy in iam to populate name.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      policyNameSelector:
                        description: Selector for a Policy in iam to populate name.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    properties:
                      name:
                        description: Name of the customer managed IAM Policy to be
                          attached.
                        type: string
                      path:
                        description: The path to the IAM policy to be attached. The
                          default is /. See IAM Identifiers for more information.
                        type: string
                      policyNameRef:
                        description: Reference to a Policy in iam to populate name.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      policyNameSelector:
                        description: Selector for a Policy in iam to populate name.
                        properties:
                          matchControllerRef:
                            description: |-
                              MatchControllerRef ensures an object with the same controller reference
                              as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching
                              labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: |-
                                  Resolution specifies whether resolution of this reference is required.
                                  The default is 'Required', which means the reconcile will fail if the
                                  reference cannot be resolved. 'Optional' means this reference will be
                                  a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: |-
                                  Resolve specifies when this reference should be resolved. The default
                                  is 'IfNotPresent', which will attempt to resolve the reference only when
                                  the corresponding field is not present. Use 'Always' to resolve the
                                  reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.customerManagedPolicyReference is a required
                parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.customerManagedPolicyReference)
                || (has(self.initProvider) && has(self.initProvider.customerManagedPolicyReference))'
          status:
            description: CustomerManagedPolicyAttachmentStatus defines the observed
              state of CustomerManagedPolicyAttachment.
            properties:
              atProvider:
                properties:
                  customerManagedPolicyReference:
                    description: Specifies the name and path of a customer managed
                      policy. See below.
                    properties:
                      name:
                        description: Name of the customer managed IAM Policy to be
                          attached.
                        type: string
                      path:
                        description: The path to the IAM policy to be attached. The
                          default is /. See IAM Identifiers for more information.
                        type: string
                    type: object
                  id:
                    description: Policy Name, Policy Path, Permission Set Amazon Resource
                      Name (ARN), and SSO Instance ARN, each separated by a comma
                      (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: CustomerManagedPolicyAttachment
    listKind: CustomerManagedPolicyAttachmentList
    plural: customermanagedpolicyattachments
    singular: customermanagedpolicyattachment
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:37Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: instanceaccesscontrolattributes.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: instanceaccesscontrolattributes.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168575"
  uid: bef1383a-b3d6-4629-8309-76534b5789a3
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: InstanceAccessControlAttributes
    listKind: InstanceAccessControlAttributesList
    plural: instanceaccesscontrolattributes
    singular: instanceaccesscontrolattributes
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'InstanceAccessControlAttributes is the Schema for the InstanceAccessControlAttributess
          API. Provides a Single Sign-On (SSO) ABAC Resource: https://docs.aws.amazon.com/singlesignon/latest/userguide/abac.html'
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InstanceAccessControlAttributesSpec defines the desired state
              of InstanceAccessControlAttributes
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  attribute:
                    description: See AccessControlAttribute for more details.
                    items:
                      properties:
                        key:
                          description: The name of the attribute associated with your
                            identities in your identity source. This is used to map
                            a specified attribute in your identity source with an
                            attribute in AWS SSO.
                          type: string
                        value:
                          description: The value used for mapping a specified attribute
                            to an identity source. See AccessControlAttributeValue
                          items:
                            properties:
                              source:
                                description: The identity source to use when mapping
                                  a specified attribute to AWS SSO.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                      type: object
                    type: array
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  attribute:
                    description: See AccessControlAttribute for more details.
                    items:
                      properties:
                        key:
                          description: The name of the attribute associated with your
                            identities in your identity source. This is used to map
                            a specified attribute in your identity source with an
                            attribute in AWS SSO.
                          type: string
                        value:
                          description: The value used for mapping a specified attribute
                            to an identity source. See AccessControlAttributeValue
                          items:
                            properties:
                              source:
                                description: The identity source to use when mapping
                                  a specified attribute to AWS SSO.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.attribute is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.attribute)
                || (has(self.initProvider) && has(self.initProvider.attribute))'
          status:
            description: InstanceAccessControlAttributesStatus defines the observed
              state of InstanceAccessControlAttributes.
            properties:
              atProvider:
                properties:
                  attribute:
                    description: See AccessControlAttribute for more details.
                    items:
                      properties:
                        key:
                          description: The name of the attribute associated with your
                            identities in your identity source. This is used to map
                            a specified attribute in your identity source with an
                            attribute in AWS SSO.
                          type: string
                        value:
                          description: The value used for mapping a specified attribute
                            to an identity source. See AccessControlAttributeValue
                          items:
                            properties:
                              source:
                                description: The identity source to use when mapping
                                  a specified attribute to AWS SSO.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    description: The identifier of the Instance Access Control Attribute
                      instance_arn.
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance.
                    type: string
                  status:
                    type: string
                  statusReason:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: InstanceAccessControlAttributes
    listKind: InstanceAccessControlAttributesList
    plural: instanceaccesscontrolattributes
    singular: instanceaccesscontrolattributes
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: managedpolicyattachments.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: managedpolicyattachments.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168562"
  uid: a07c61de-cdad-4def-a205-e9b7b3239316
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ManagedPolicyAttachment
    listKind: ManagedPolicyAttachmentList
    plural: managedpolicyattachments
    singular: managedpolicyattachment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ManagedPolicyAttachment is the Schema for the ManagedPolicyAttachments
          API. Manages an IAM managed policy for a Single Sign-On (SSO) Permission
          Set
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ManagedPolicyAttachmentSpec defines the desired state of
              ManagedPolicyAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  managedPolicyArn:
                    description: The IAM managed policy Amazon Resource Name (ARN)
                      to be attached to the Permission Set.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - managedPolicyArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ManagedPolicyAttachmentStatus defines the observed state
              of ManagedPolicyAttachment.
            properties:
              atProvider:
                properties:
                  id:
                    description: The Amazon Resource Names (ARNs) of the Managed Policy,
                      Permission Set, and SSO Instance, separated by a comma (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  managedPolicyArn:
                    description: The IAM managed policy Amazon Resource Name (ARN)
                      to be attached to the Permission Set.
                    type: string
                  managedPolicyName:
                    description: The name of the IAM Managed Policy.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: ManagedPolicyAttachment
    listKind: ManagedPolicyAttachmentList
    plural: managedpolicyattachments
    singular: managedpolicyattachment
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: permissionsboundaryattachments.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: permissionsboundaryattachments.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168581"
  uid: b590790d-ff99-4177-914c-c15be8018b42
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionsBoundaryAttachment
    listKind: PermissionsBoundaryAttachmentList
    plural: permissionsboundaryattachments
    singular: permissionsboundaryattachment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PermissionsBoundaryAttachment is the Schema for the PermissionsBoundaryAttachments
          API. Attaches a permissions boundary policy to a Single Sign-On (SSO) Permission
          Set resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PermissionsBoundaryAttachmentSpec defines the desired state
              of PermissionsBoundaryAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    items:
                      properties:
                        customerManagedPolicyReference:
                          description: Specifies the name and path of a customer managed
                            policy. See below.
                          items:
                            properties:
                              name:
                                description: Name of the customer managed IAM Policy
                                  to be attached.
                                type: string
                              nameRef:
                                description: Reference to a Policy in iam to populate
                                  name.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              nameSelector:
                                description: Selector for a Policy in iam to populate
                                  name.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              path:
                                description: The path to the IAM policy to be attached.
                                  The default is /. See IAM Identifiers for more information.
                                type: string
                            type: object
                          type: array
                        managedPolicyArn:
                          description: AWS-managed IAM policy ARN to use as the permissions
                            boundary.
                          type: string
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    items:
                      properties:
                        customerManagedPolicyReference:
                          description: Specifies the name and path of a customer managed
                            policy. See below.
                          items:
                            properties:
                              name:
                                description: Name of the customer managed IAM Policy
                                  to be attached.
                                type: string
                              nameRef:
                                description: Reference to a Policy in iam to populate
                                  name.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              nameSelector:
                                description: Selector for a Policy in iam to populate
                                  name.
                                properties:
                                  matchControllerRef:
                                    description: |-
                                      MatchControllerRef ensures an object with the same controller reference
                                      as the selecting object is selected.
                                    type: boolean
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: MatchLabels ensures an object with
                                      matching labels is selected.
                                    type: object
                                  policy:
                                    description: Policies for selection.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: |-
                                          Resolution specifies whether resolution of this reference is required.
                                          The default is 'Required', which means the reconcile will fail if the
                                          reference cannot be resolved. 'Optional' means this reference will be
                                          a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: |-
                                          Resolve specifies when this reference should be resolved. The default
                                          is 'IfNotPresent', which will attempt to resolve the reference only when
                                          the corresponding field is not present. Use 'Always' to resolve the
                                          reference on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                type: object
                              path:
                                description: The path to the IAM policy to be attached.
                                  The default is /. See IAM Identifiers for more information.
                                type: string
                            type: object
                          type: array
                        managedPolicyArn:
                          description: AWS-managed IAM policy ARN to use as the permissions
                            boundary.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.permissionsBoundary is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.permissionsBoundary)
                || (has(self.initProvider) && has(self.initProvider.permissionsBoundary))'
          status:
            description: PermissionsBoundaryAttachmentStatus defines the observed
              state of PermissionsBoundaryAttachment.
            properties:
              atProvider:
                properties:
                  id:
                    description: Permission Set Amazon Resource Name (ARN) and SSO
                      Instance ARN, separated by a comma (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    items:
                      properties:
                        customerManagedPolicyReference:
                          description: Specifies the name and path of a customer managed
                            policy. See below.
                          items:
                            properties:
                              name:
                                description: Name of the customer managed IAM Policy
                                  to be attached.
                                type: string
                              path:
                                description: The path to the IAM policy to be attached.
                                  The default is /. See IAM Identifiers for more information.
                                type: string
                            type: object
                          type: array
                        managedPolicyArn:
                          description: AWS-managed IAM policy ARN to use as the permissions
                            boundary.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: PermissionsBoundaryAttachment is the Schema for the PermissionsBoundaryAttachments
          API. Attaches a permissions boundary policy to a Single Sign-On (SSO) Permission
          Set resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PermissionsBoundaryAttachmentSpec defines the desired state
              of PermissionsBoundaryAttachment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    properties:
                      customerManagedPolicyReference:
                        description: Specifies the name and path of a customer managed
                          policy. See below.
                        properties:
                          name:
                            description: Name of the customer managed IAM Policy to
                              be attached.
                            type: string
                          nameRef:
                            description: Reference to a Policy in iam to populate
                              name.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          nameSelector:
                            description: Selector for a Policy in iam to populate
                              name.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          path:
                            description: The path to the IAM policy to be attached.
                              The default is /. See IAM Identifiers for more information.
                            type: string
                        type: object
                      managedPolicyArn:
                        description: AWS-managed IAM policy ARN to use as the permissions
                          boundary.
                        type: string
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    properties:
                      customerManagedPolicyReference:
                        description: Specifies the name and path of a customer managed
                          policy. See below.
                        properties:
                          name:
                            description: Name of the customer managed IAM Policy to
                              be attached.
                            type: string
                          nameRef:
                            description: Reference to a Policy in iam to populate
                              name.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          nameSelector:
                            description: Selector for a Policy in iam to populate
                              name.
                            properties:
                              matchControllerRef:
                                description: |-
                                  MatchControllerRef ensures an object with the same controller reference
                                  as the selecting object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          path:
                            description: The path to the IAM policy to be attached.
                              The default is /. See IAM Identifiers for more information.
                            type: string
                        type: object
                      managedPolicyArn:
                        description: AWS-managed IAM policy ARN to use as the permissions
                          boundary.
                        type: string
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.permissionsBoundary is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.permissionsBoundary)
                || (has(self.initProvider) && has(self.initProvider.permissionsBoundary))'
          status:
            description: PermissionsBoundaryAttachmentStatus defines the observed
              state of PermissionsBoundaryAttachment.
            properties:
              atProvider:
                properties:
                  id:
                    description: Permission Set Amazon Resource Name (ARN) and SSO
                      Instance ARN, separated by a comma (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionsBoundary:
                    description: The permissions boundary policy. See below.
                    properties:
                      customerManagedPolicyReference:
                        description: Specifies the name and path of a customer managed
                          policy. See below.
                        properties:
                          name:
                            description: Name of the customer managed IAM Policy to
                              be attached.
                            type: string
                          path:
                            description: The path to the IAM policy to be attached.
                              The default is /. See IAM Identifiers for more information.
                            type: string
                        type: object
                      managedPolicyArn:
                        description: AWS-managed IAM policy ARN to use as the permissions
                          boundary.
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionsBoundaryAttachment
    listKind: PermissionsBoundaryAttachmentList
    plural: permissionsboundaryattachments
    singular: permissionsboundaryattachment
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:37Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: permissionsetinlinepolicies.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: permissionsetinlinepolicies.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168584"
  uid: 9f7bd5d5-81c6-46ce-aabe-9f53f7462d35
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionSetInlinePolicy
    listKind: PermissionSetInlinePolicyList
    plural: permissionsetinlinepolicies
    singular: permissionsetinlinepolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PermissionSetInlinePolicy is the Schema for the PermissionSetInlinePolicys
          API. Manages an IAM inline policy for a Single Sign-On (SSO) Permission
          Set
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PermissionSetInlinePolicySpec defines the desired state of
              PermissionSetInlinePolicy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  inlinePolicy:
                    description: The IAM inline policy to attach to a Permission Set.
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  permissionSetArnRef:
                    description: Reference to a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  permissionSetArnSelector:
                    description: Selector for a PermissionSet in ssoadmin to populate
                      permissionSetArn.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                required:
                - instanceArn
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  inlinePolicy:
                    description: The IAM inline policy to attach to a Permission Set.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.inlinePolicy is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.inlinePolicy)
                || (has(self.initProvider) && has(self.initProvider.inlinePolicy))'
          status:
            description: PermissionSetInlinePolicyStatus defines the observed state
              of PermissionSetInlinePolicy.
            properties:
              atProvider:
                properties:
                  id:
                    description: The Amazon Resource Names (ARNs) of the Permission
                      Set and SSO Instance, separated by a comma (,).
                    type: string
                  inlinePolicy:
                    description: The IAM inline policy to attach to a Permission Set.
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  permissionSetArn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionSetInlinePolicy
    listKind: PermissionSetInlinePolicyList
    plural: permissionsetinlinepolicies
    singular: permissionsetinlinepolicy
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:37Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    kustomize.config.k8s.io/id: |
      group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      name: permissionsets.ssoadmin.aws.upbound.io
      version: v1
  creationTimestamp: "2024-09-25T13:31:36Z"
  generation: 1
  name: permissionsets.ssoadmin.aws.upbound.io
  ownerReferences:
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: ProviderRevision
    name: upbound-provider-aws-ssoadmin-c3efb226c89c
    uid: 179afd96-5416-4cc5-826a-2807442d0618
  - apiVersion: pkg.crossplane.io/v1
    blockOwnerDeletion: true
    controller: false
    kind: Provider
    name: upbound-provider-aws-ssoadmin
    uid: 42011319-1b22-4191-a1f3-4c9a030d4066
  resourceVersion: "13168558"
  uid: 5ee404f2-6de2-4f66-82aa-8f4db6f834cf
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQrakNDQXVLZ0F3SUJBZ0lDQitZd0RRWUpLb1pJaHZjTkFRRUxCUUF3V2pFT01Bd0dBMVVFQmhNRlJXRnkKZEdneERqQU1CZ05WQkFnVEJVVmhjblJvTVE0d0RBWURWUVFIRXdWRllYSjBhREVUTUJFR0ExVUVDaE1LUTNKdgpjM053YkdGdVpURVRNQkVHQTFVRUF4TUtRM0p2YzNOd2JHRnVaVEFlRncweU5EQTVNalV4TXpNeE16SmFGdzB6Ck5EQTVNalV4TXpNeE16SmFNRm94RGpBTUJnTlZCQVlUQlVWaGNuUm9NUTR3REFZRFZRUUlFd1ZGWVhKMGFERU8KTUF3R0ExVUVCeE1GUldGeWRHZ3hFekFSQmdOVkJBb1RDa055YjNOemNHeGhibVV4RXpBUkJnTlZCQU1UQ2tOeQpiM056Y0d4aGJtVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETFVRWUVPMjdiCkkrcmRBRHI3M3VERGR1eXIyMjJIZjkwUlB5cXhUcHlJd2d0b3FJaG5SRmVjUU1GZTBUQWI1UVZOdmhZLy9UTHoKeGdnbk1ReS9pYm1IbGdtSm9jdTZsc0RsTWQrMkExcUJoejM4MjhvdS9KRUpqSVJ1YlhJbGhyVzM0emRPSlVMRwpoN1dhelZLTmdGeGpzb0VOQmR4d3RCY3RWK3NlVjc3am9FUlFhRFpTS3A4azFKMEVwTmRtbDdOM0FXZHl1cGtXCmZhWHJ4STJadFBGNWlMbnVHVm43RXpIcnl2TFE2SS9YZXhndkE3SU5UOVpOTER3MDV6UTRQdWZrdWJmMzhINmkKaUl2eW1JMlU2RytIQUVhRkhrYTdWNjZKSnlMcEZueGFmU0w0bm4vbWlxQkdCcHRiNlpCK2I4aGJFZGxnZDU0QQpRanR2UnVJOFFiWmJBZ01CQUFHamdja3dnY1l3RGdZRFZSMFBBUUgvQkFRREFnU3dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQk1Bd0dBMVVkRXdFQi93UUNNQUF3Z1pBR0ExVWRFUVNCaURDQmhZSWRkWEJpYjNWdVpDMXcKY205MmFXUmxjaTFoZDNNdGMzTnZZV1J0YVc2Q0wzVndZbTkxYm1RdGNISnZkbWxrWlhJdFlYZHpMWE56YjJGawpiV2x1TG1OeWIzTnpjR3hoYm1VdGMzbHpkR1Z0Z2pOMWNHSnZkVzVrTFhCeWIzWnBaR1Z5TFdGM2N5MXpjMjloClpHMXBiaTVqY205emMzQnNZVzVsTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFISXgKcmgyOG9uRzRsMW9MNzlkTVZaUWkrbU5QTVNqS0hQTEN1TEJaZVlvZWpuTzR6L3lrRXE5ZFRrWDRTazNHRHNPeQpZczB2UWxtc1hYbXI2MTc2UHFLZUp5cCtxYXllclcvNTNnTkgwS0xoMnRxNjhsa2dlSzZsUHpCQzZ0SHkzRDhECnZ3dGZaVDBNTEdXZlZLQSsvMTl3bkkyeThyNGtiL0J4bmRIakw1bDk0VzNQd3hhMU15Qk1yUng1Y3FkN3JlWjgKclVFZktHMVl4VTFmSWRTMmFjMU1iMFQvZUYzd21wVW8wVVJlQmNtQ2pOaUpJMVlXWHhvWWIvLzViVjBHME9CLwphSHpGckZTZFJ0aVhOSDc2aGlaT3hXR2l1dWJpdFJLY0pHK0ppMXBUSXRaSDJOVTEzTmpNN2lVY1JFa3dVdWtqCnpkRXlTV3RSbmx6VzFFamJCNFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: upbound-provider-aws-ssoadmin
          namespace: crossplane-system
          path: /convert
          port: 9443
      conversionReviewVersions:
      - v1
  group: ssoadmin.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionSet
    listKind: PermissionSetList
    plural: permissionsets
    singular: permissionset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: PermissionSet is the Schema for the PermissionSets API. Manages
          a Single Sign-On (SSO) Permission Set
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PermissionSetSpec defines the desired state of PermissionSet
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: The description of the Permission Set.
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  name:
                    description: The name of the Permission Set.
                    type: string
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  relayState:
                    description: The relay state URL used to redirect users within
                      the application during the federation authentication process.
                    type: string
                  sessionDuration:
                    description: 'The length of time that the application user sessions
                      are valid in the ISO-8601 standard. Default: PT1H.'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                required:
                - region
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  description:
                    description: The description of the Permission Set.
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  name:
                    description: The name of the Permission Set.
                    type: string
                  relayState:
                    description: The relay state URL used to redirect users within
                      the application during the federation authentication process.
                    type: string
                  sessionDuration:
                    description: 'The length of time that the application user sessions
                      are valid in the ISO-8601 standard. Default: PT1H.'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.instanceArn is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.instanceArn)
                || (has(self.initProvider) && has(self.initProvider.instanceArn))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: PermissionSetStatus defines the observed state of PermissionSet.
            properties:
              atProvider:
                properties:
                  arn:
                    description: The Amazon Resource Name (ARN) of the Permission
                      Set.
                    type: string
                  createdDate:
                    description: The date the Permission Set was created in RFC3339
                      format.
                    type: string
                  description:
                    description: The description of the Permission Set.
                    type: string
                  id:
                    description: The Amazon Resource Names (ARNs) of the Permission
                      Set and SSO Instance, separated by a comma (,).
                    type: string
                  instanceArn:
                    description: The Amazon Resource Name (ARN) of the SSO Instance
                      under which the operation will be executed.
                    type: string
                  name:
                    description: The name of the Permission Set.
                    type: string
                  relayState:
                    description: The relay state URL used to redirect users within
                      the application during the federation authentication process.
                    type: string
                  sessionDuration:
                    description: 'The length of time that the application user sessions
                      are valid in the ISO-8601 standard. Default: PT1H.'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                    x-kubernetes-map-type: granular
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: A map of tags assigned to the resource, including
                      those inherited from the provider default_tags configuration
                      block.
                    type: object
                    x-kubernetes-map-type: granular
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    categories:
    - crossplane
    - managed
    - aws
    kind: PermissionSet
    listKind: PermissionSetList
    plural: permissionsets
    singular: permissionset
  conditions:
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-09-25T13:31:36Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1beta1
